{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Banner = function Banner() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    bannerImage = _useState2[0],\n    setBannerImage = _useState2[1];\n  useEffect(function () {\n    var fetchBannerImage = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch('https://example.com/api/banner');\n          var data = yield response.json();\n          setBannerImage(data.imageUrl);\n        } catch (error) {\n          console.error('Error fetching banner image:', error);\n        }\n      });\n      return function fetchBannerImage() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchBannerImage();\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: bannerImage ? _jsx(Image, {\n      source: {\n        uri: bannerImage\n      },\n      style: styles.image,\n      resizeMode: \"contain\"\n    }) : _jsx(View, {\n      style: styles.placeholder\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    paddingHorizontal: 20\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  placeholder: {\n    width: '100%',\n    height: 200,\n    backgroundColor: '#ccc',\n    borderRadius: 10\n  }\n});\nexport default Banner;","map":{"version":3,"names":["React","useState","useEffect","View","Image","StyleSheet","jsx","_jsx","Banner","_useState","_useState2","_slicedToArray","bannerImage","setBannerImage","fetchBannerImage","_ref","_asyncToGenerator","response","fetch","data","json","imageUrl","error","console","apply","arguments","style","styles","container","children","source","uri","image","resizeMode","placeholder","create","marginTop","paddingHorizontal","width","height","borderRadius","overflow","backgroundColor"],"sources":["C:/Users/Bharath Kumar/Desktop/Astonish/React_Native/E-Commerce/Jtdeal/jtdeal/component/screens/Banner.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Image, StyleSheet } from 'react-native';\r\n\r\nconst Banner = () => {\r\n  const [bannerImage, setBannerImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch banner image from the backend\r\n    const fetchBannerImage = async () => {\r\n      try {\r\n        const response = await fetch('https://example.com/api/banner'); // Replace with your backend API endpoint\r\n        const data = await response.json();\r\n        setBannerImage(data.imageUrl);\r\n      } catch (error) {\r\n        console.error('Error fetching banner image:', error);\r\n      }\r\n    };\r\n\r\n    fetchBannerImage(); // Call the fetchBannerImage function when the component mounts\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {bannerImage ? (\r\n        <Image source={{ uri: bannerImage }} style={styles.image} resizeMode=\"contain\" />\r\n      ) : (\r\n        <View style={styles.placeholder} />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: 200, // Set a constant height for the image\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n  },\r\n  placeholder: {\r\n    width: '100%',\r\n    height: 200, // Set the same height as the image\r\n    backgroundColor: '#ccc', // Placeholder background color\r\n    borderRadius: 10,\r\n  },\r\n});\r\n\r\nexport default Banner;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGnD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAAC,SAAA,GAAsCR,QAAQ,CAAC,IAAI,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElCR,SAAS,CAAC,YAAM;IAEd,IAAMY,gBAAgB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QACnC,IAAI;UACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,gCAAgC,CAAC;UAC9D,IAAMC,IAAI,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCP,cAAc,CAACM,IAAI,CAACE,QAAQ,CAAC;QAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACtD;MACF,CAAC;MAAA,gBARKR,gBAAgBA,CAAA;QAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQrB;IAEDX,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,IAAA,CAACJ,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC3BjB,WAAW,GACVL,IAAA,CAACH,KAAK;MAAC0B,MAAM,EAAE;QAAEC,GAAG,EAAEnB;MAAY,CAAE;MAACc,KAAK,EAAEC,MAAM,CAACK,KAAM;MAACC,UAAU,EAAC;IAAS,CAAE,CAAC,GAEjF1B,IAAA,CAACJ,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACO;IAAY,CAAE;EACnC,CACG,CAAC;AAEX,CAAC;AAED,IAAMP,MAAM,GAAGtB,UAAU,CAAC8B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,SAAS,EAAE,EAAE;IACbC,iBAAiB,EAAE;EACrB,CAAC;EACDL,KAAK,EAAE;IACLM,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDP,WAAW,EAAE;IACXI,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,GAAG;IACXG,eAAe,EAAE,MAAM;IACvBF,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAehC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}