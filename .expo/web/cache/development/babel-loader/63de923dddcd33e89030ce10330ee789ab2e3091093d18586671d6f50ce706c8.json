{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Cart = function Cart() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    CartItems = _useState2[0],\n    setCartItems = _useState2[1];\n  var fetchCartContents = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch('https://example.com/api/cart');\n        var data = yield response.json();\n        setCartItems(data);\n      } catch (error) {\n        console.error('Error fetching cart contents:', error);\n      }\n    });\n    return function fetchCartContents() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var addItemToCart = function () {\n    var _ref2 = _asyncToGenerator(function* (itemId) {\n      try {\n        var response = yield fetch('https://example.com/api/cart/add/${itemId}', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        fetchCartContents();\n      } catch (error) {\n        console.error('Error adding item to cart:', error);\n      }\n    });\n    return function addItemToCart(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchCartContents();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Cart\"\n    }), cartItems.map(function (item) {\n      return _jsxs(Text, {\n        children: [item.name, \" - $\", item.price]\n      }, item.id);\n    }), _jsx(Button, {\n      title: \"Add Item to Cart\",\n      onPress: function onPress() {\n        return addItemToCart(itemId);\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});\nexport default Addtocart;","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","Button","jsx","_jsx","jsxs","_jsxs","Cart","_useState","_useState2","_slicedToArray","CartItems","setCartItems","fetchCartContents","_ref","_asyncToGenerator","response","fetch","data","json","error","console","apply","arguments","addItemToCart","_ref2","itemId","method","headers","_x","style","styles","container","children","heading","cartItems","map","item","name","price","id","title","onPress","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginBottom","Addtocart"],"sources":["C:/Users/Bharath Kumar/Desktop/Astonish/React_Native/E-Commerce/Jtdeal/jtdeal/component/header/Addtocart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button } from 'react-native';\r\n\r\nconst Cart = () => {\r\n  const [CartItems, setCartItems] = useState([]);\r\n\r\n  // Function to fetch cart contents from the backend\r\n  const fetchCartContents = async () => {\r\n    try {\r\n      const response = await fetch('https://example.com/api/cart'); // Replace with your backend API endpoint\r\n      const data = await response.json();\r\n      setCartItems(data);\r\n    } catch (error) {\r\n      console.error('Error fetching cart contents:', error);\r\n    }\r\n  };\r\n\r\n  // Function to add an item to the cart\r\n  const addItemToCart = async (itemId) => {\r\n    try {\r\n      const response = await fetch('https://example.com/api/cart/add/${itemId}',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        // You may need to pass additional data in the request body\r\n      });\r\n      // Handle response as needed\r\n      fetchCartContents(); // Refresh cart contents after adding item\r\n    } catch (error) {\r\n      console.error('Error adding item to cart:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCartContents(); // Fetch cart contents when component mounts\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Cart</Text>\r\n      {cartItems.map((item) => (\r\n        <Text key={item.id}>{item.name} - ${item.price}</Text>\r\n      ))}\r\n      <Button title=\"Add Item to Cart\" onPress={() => addItemToCart(itemId)} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  heading: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default Addtocart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACjB,IAAAC,SAAA,GAAkCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAG9B,IAAMI,iBAAiB;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MACpC,IAAI;QACF,IAAMC,QAAQ,SAASC,KAAK,CAAC,8BAA8B,CAAC;QAC5D,IAAMC,IAAI,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCP,YAAY,CAACM,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAAA,gBARKP,iBAAiBA,CAAA;MAAA,OAAAC,IAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQtB;EAGD,IAAMC,aAAa;IAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,WAAOW,MAAM,EAAK;MACtC,IAAI;QACF,IAAMV,QAAQ,SAASC,KAAK,CAAC,4CAA4C,EACzE;UACEU,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QAEF,CAAC,CAAC;QAEFf,iBAAiB,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAAA,gBAfKI,aAAaA,CAAAK,EAAA;MAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAelB;EAEDzB,SAAS,CAAC,YAAM;IACde,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEP,KAAA,CAACP,IAAI;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5B7B,IAAA,CAACJ,IAAI;MAAC8B,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAI,CAAM,CAAC,EACvCE,SAAS,CAACC,GAAG,CAAC,UAACC,IAAI;MAAA,OAClB/B,KAAA,CAACN,IAAI;QAAAiC,QAAA,GAAgBI,IAAI,CAACC,IAAI,EAAC,MAAI,EAACD,IAAI,CAACE,KAAK;MAAA,GAAnCF,IAAI,CAACG,EAAqC,CAAC;IAAA,CACvD,CAAC,EACFpC,IAAA,CAACF,MAAM;MAACuC,KAAK,EAAC,kBAAkB;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMlB,aAAa,CAACE,MAAM,CAAC;MAAA;IAAC,CAAE,CAAC;EAAA,CACrE,CAAC;AAEX,CAAC;AAED,IAAMK,MAAM,GAAG9B,UAAU,CAAC0C,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDZ,OAAO,EAAE;IACPa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAeC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}