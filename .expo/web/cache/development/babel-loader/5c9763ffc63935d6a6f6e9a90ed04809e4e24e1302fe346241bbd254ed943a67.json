{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UserAccount = function UserAccount() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var navigation = useNavigation();\n  var handleToggleMode = function handleToggleMode() {};\n  var handleLogin = function handleLogin() {\n    console.log('Login button pressed');\n    setIsLoggedIn(true);\n  };\n  var handleLogout = function handleLogout() {\n    console.log('Logout button pressed');\n    setIsLoggedIn(false);\n  };\n  var handleTermsAndConditions = function handleTermsAndConditions() {\n    navigation.navigate('TermsAndConditions');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.profileInfo,\n      children: [_jsxs(View, {\n        style: styles.profileHeader,\n        children: [_jsx(FontAwesome, {\n          name: \"user\",\n          size: 60,\n          color: \"black\",\n          style: styles.profileIcon\n        }), _jsx(TouchableOpacity, {\n          style: styles.editIcon,\n          onPress: function onPress() {\n            return console.log('Edit profile');\n          },\n          children: _jsx(MaterialIcons, {\n            name: \"edit\",\n            size: 24,\n            color: \"black\"\n          })\n        })]\n      }), _jsx(Text, {\n        style: styles.profileTitle,\n        children: \"Profile Information\"\n      }), _jsx(Text, {\n        children: isLoggedIn ? 'Welcome User' : 'Guest'\n      })]\n    }), !isLoggedIn ? _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"Login\"\n      })\n    }) : _jsx(TouchableOpacity, {\n      style: styles.logoutButton,\n      onPress: handleLogout,\n      children: _jsx(Text, {\n        style: styles.logoutButtonText,\n        children: \"Logout\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.option,\n      children: _jsx(Text, {\n        style: styles.optionText,\n        children: \"Sale on JTDeal\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.option,\n      children: _jsx(Text, {\n        style: styles.optionText,\n        children: \"Dashboard\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.option,\n      children: _jsx(Text, {\n        style: styles.optionText,\n        children: \"MyOrder\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.option,\n      children: _jsx(Text, {\n        style: styles.optionText,\n        children: \"Customer Care\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: handleTermsAndConditions,\n      children: _jsx(Text, {\n        style: styles.optionText,\n        children: \"Terms and Conditions\"\n      })\n    }), isLoggedIn ? null : _jsx(Login, {})]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  profileInfo: {\n    marginTop: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 10,\n    width: '95%'\n  },\n  profileHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  profileIcon: {\n    backgroundColor: '#ddd',\n    borderRadius: 20,\n    padding: 20\n  },\n  editIcon: {\n    backgroundColor: '#ddd',\n    borderRadius: 20,\n    padding: 15\n  },\n  profileTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  loginButton: {\n    marginTop: 20,\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 50,\n    borderRadius: 10\n  },\n  loginButtonText: {\n    fontSize: 16,\n    color: 'white'\n  },\n  logoutButton: {\n    marginTop: 20,\n    backgroundColor: 'red',\n    paddingVertical: 10,\n    paddingHorizontal: 50,\n    borderRadius: 10\n  },\n  logoutButtonText: {\n    fontSize: 16,\n    color: 'white'\n  },\n  option: {\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    width: '100%',\n    alignItems: 'left'\n  },\n  optionText: {\n    fontSize: 18\n  }\n});\nexport default UserAccount;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","FontAwesome","MaterialIcons","useNavigation","jsx","_jsx","jsxs","_jsxs","UserAccount","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","navigation","handleToggleMode","handleLogin","console","log","handleLogout","handleTermsAndConditions","navigate","style","styles","container","children","profileInfo","profileHeader","name","size","color","profileIcon","editIcon","onPress","profileTitle","loginButton","loginButtonText","logoutButton","logoutButtonText","option","optionText","Login","create","flex","justifyContent","alignItems","marginTop","padding","borderWidth","borderColor","borderRadius","width","flexDirection","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderBottomWidth","borderBottomColor"],"sources":["C:/Users/Bharath Kumar/Desktop/Astonish/React_Native/E-Commerce/Jtdeal/jtdeal/component/footer/UserAccount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { FontAwesome } from '@expo/vector-icons'; // Import FontAwesome for the user icon\r\nimport { MaterialIcons } from '@expo/vector-icons'; // Import MaterialIcons for the edit icon\r\nimport { useNavigation } from '@react-navigation/native'; // Import useNavigation hook\r\n\r\nconst UserAccount = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n  const navigation = useNavigation(); // Initialize navigation\r\n\r\n  const handleToggleMode = () => {\r\n    // Toggle between 'sign-in' and 'sign-up' modes\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    // Handle login action\r\n    console.log('Login button pressed');\r\n    setIsLoggedIn(true); // Set login status to true\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Handle logout action\r\n    console.log('Logout button pressed');\r\n    setIsLoggedIn(false); // Set login status to false\r\n  };\r\n\r\n  const handleTermsAndConditions = () => {\r\n    navigation.navigate('TermsAndConditions'); // Navigate to the TermsAndConditions screen\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Profile information section */}\r\n      <View style={styles.profileInfo}>\r\n        <View style={styles.profileHeader}>\r\n          <FontAwesome name=\"user\" size={60} color=\"black\" style={styles.profileIcon} />\r\n          <TouchableOpacity style={styles.editIcon} onPress={() => console.log('Edit profile')}>\r\n            <MaterialIcons name=\"edit\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <Text style={styles.profileTitle}>Profile Information</Text>\r\n        <Text>{isLoggedIn ? 'Welcome User' : 'Guest'}</Text>\r\n        {/* Add more profile information here */}\r\n      </View>\r\n\r\n      {/* Conditional rendering based on login status */}\r\n      {!isLoggedIn ? (\r\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n          <Text style={styles.loginButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n          <Text style={styles.logoutButtonText}>Logout</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      {/* Other options */}\r\n      <TouchableOpacity style={styles.option}>\r\n        <Text style={styles.optionText}>Sale on JTDeal</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.option}>\r\n        <Text style={styles.optionText}>Dashboard</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.option}>\r\n        <Text style={styles.optionText}>MyOrder</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.option}>\r\n        <Text style={styles.optionText}>Customer Care</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity style={styles.option} onPress={handleTermsAndConditions}>\r\n        <Text style={styles.optionText}>Terms and Conditions</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Conditionally render the Login component */}\r\n      {isLoggedIn ? null : <Login />}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  profileInfo: {\r\n    marginTop: 20,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 10,\r\n    width: '95%',\r\n  },\r\n  profileHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  profileIcon: {\r\n    backgroundColor: '#ddd',\r\n    borderRadius: 20,\r\n    padding: 20,\r\n  },\r\n  editIcon: {\r\n    backgroundColor: '#ddd',\r\n    borderRadius: 20,\r\n    padding: 15,\r\n  },\r\n  profileTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  loginButton: {\r\n    marginTop: 20,\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 50,\r\n    borderRadius: 10,\r\n  },\r\n  loginButtonText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n  logoutButton: {\r\n    marginTop: 20,\r\n    backgroundColor: 'red',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 50,\r\n    borderRadius: 10,\r\n  },\r\n  logoutButtonText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n  option: {\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 20,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n    width: '100%',\r\n    alignItems: 'left',\r\n  },\r\n  optionText: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default UserAccount;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}