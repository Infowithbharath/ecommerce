{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MyOrderPage = function MyOrderPage() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    orders = _useState2[0],\n    setOrders = _useState2[1];\n  useEffect(function () {\n    fetchOrdersFromBackend();\n  }, []);\n  var fetchOrdersFromBackend = function fetchOrdersFromBackend() {\n    var mockOrders = [{\n      id: 1,\n      orderNumber: '12345',\n      status: 'Delivered',\n      items: ['Product A', 'Product B'],\n      total: 100.00\n    }, {\n      id: 2,\n      orderNumber: '54321',\n      status: 'In Progress',\n      items: ['Product X', 'Product Y'],\n      total: 50.00\n    }];\n    setOrders(mockOrders);\n  };\n  var handleViewDetails = function handleViewDetails(order) {\n    navigation.navigate('OrderDetails', {\n      order: order\n    });\n  };\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"My Orders\"\n    }), orders.map(function (order) {\n      return _jsxs(TouchableOpacity, {\n        style: styles.card,\n        onPress: function onPress() {\n          return handleViewDetails(order);\n        },\n        children: [_jsxs(Text, {\n          style: styles.orderTitle,\n          children: [\"Order #\", order.orderNumber]\n        }), _jsxs(Text, {\n          style: styles.orderDetails,\n          children: [\"Status: \", order.status]\n        }), _jsxs(Text, {\n          style: styles.orderDetails,\n          children: [\"Items: \", order.items.join(', ')]\n        }), _jsxs(Text, {\n          style: styles.orderDetails,\n          children: [\"Total: Rs.\", order.total.toFixed(2)]\n        }), _jsx(Text, {\n          style: styles.viewOrderButton,\n          children: \"View Details\"\n        })]\n      }, order.id);\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    padding: 20\n  },\n  heading: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: 'black'\n  },\n  card: {\n    backgroundColor: '#ffffff',\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 20,\n    elevation: 3,\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowColor: '#333',\n    shadowOpacity: 0.3,\n    shadowRadius: 2\n  },\n  orderTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  orderDetails: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  viewOrderButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 10,\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default MyOrderPage;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","useNavigation","jsx","_jsx","jsxs","_jsxs","MyOrderPage","navigation","_useState","_useState2","_slicedToArray","orders","setOrders","fetchOrdersFromBackend","mockOrders","id","orderNumber","status","items","total","handleViewDetails","order","navigate","contentContainerStyle","styles","container","children","style","heading","map","card","onPress","orderTitle","orderDetails","join","toFixed","viewOrderButton","create","flexGrow","padding","fontSize","fontWeight","marginBottom","color","backgroundColor","borderRadius","elevation","shadowOffset","width","height","shadowColor","shadowOpacity","shadowRadius","paddingVertical","paddingHorizontal","marginTop","textAlign"],"sources":["C:/Users/Bharath Kumar/Desktop/Astonish/React_Native/E-Commerce/Jtdeal/jtdeal/component/footer/MyOrderPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst MyOrderPage = () => {\r\n  const navigation = useNavigation();\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Fetch orders from backend when component mounts\r\n  useEffect(() => {\r\n    fetchOrdersFromBackend();\r\n  }, []);\r\n\r\n  const fetchOrdersFromBackend = () => {\r\n    // Replace this with actual API call to fetch orders from your backend\r\n    const mockOrders = [\r\n      { id: 1, orderNumber: '12345', status: 'Delivered', items: ['Product A', 'Product B'], total: 100.00 },\r\n      { id: 2, orderNumber: '54321', status: 'In Progress', items: ['Product X', 'Product Y'], total: 50.00 },\r\n    ];\r\n    setOrders(mockOrders);\r\n  };\r\n\r\n  const handleViewDetails = (order) => {\r\n    // Navigate to the order details screen and pass the order object as a parameter\r\n    navigation.navigate('OrderDetails', { order });\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <Text style={styles.heading}>My Orders</Text>\r\n\r\n      {orders.map((order) => (\r\n        <TouchableOpacity\r\n          key={order.id}\r\n          style={styles.card}\r\n          onPress={() => handleViewDetails(order)}\r\n        >\r\n          <Text style={styles.orderTitle}>Order #{order.orderNumber}</Text>\r\n          <Text style={styles.orderDetails}>Status: {order.status}</Text>\r\n          <Text style={styles.orderDetails}>Items: {order.items.join(', ')}</Text>\r\n          <Text style={styles.orderDetails}>Total: Rs.{order.total.toFixed(2)}</Text>\r\n          <Text style={styles.viewOrderButton}>View Details</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexGrow: 1,\r\n    padding: 20,\r\n  },\r\n  heading: {\r\n    fontSize: 28,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    color: 'black'\r\n  },\r\n  card: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 10,\r\n    padding: 20,\r\n    marginBottom: 20,\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: '#333',\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n  orderTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  orderDetails: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  viewOrderButton: {\r\n    backgroundColor: 'blue',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport defaultÂ MyOrderPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}