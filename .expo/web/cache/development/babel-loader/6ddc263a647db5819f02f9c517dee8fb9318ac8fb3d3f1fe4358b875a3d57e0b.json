{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UserAccount = function UserAccount() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var navigation = useNavigation();\n  var handleLogin = function handleLogin() {\n    navigation.navigate('Login');\n  };\n  var handleLogout = function handleLogout() {\n    setIsLoggedIn(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.profileInfo,\n      children: [_jsx(Text, {\n        style: styles.profileTitle,\n        children: \"Profile Information\"\n      }), _jsx(Text, {\n        children: isLoggedIn ? 'Welcome User' : 'Guest'\n      })]\n    }), !isLoggedIn ? _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.loginButtonText,\n        children: \"Login\"\n      })\n    }) : _jsx(TouchableOpacity, {\n      style: styles.logoutButton,\n      onPress: handleLogout,\n      children: _jsx(Text, {\n        style: styles.logoutButtonText,\n        children: \"Logout\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.option,\n      children: _jsx(Text, {\n        style: styles.optionText,\n        children: \"Sale on JTDeal\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  profileInfo: {\n    marginTop: 20\n  },\n  profileTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  loginButton: {\n    marginTop: 20,\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 50,\n    borderRadius: 10\n  },\n  loginButtonText: {\n    fontSize: 16,\n    color: 'white'\n  },\n  logoutButton: {\n    marginTop: 20,\n    backgroundColor: 'red',\n    paddingVertical: 10,\n    paddingHorizontal: 50,\n    borderRadius: 10\n  },\n  logoutButtonText: {\n    fontSize: 16,\n    color: 'white'\n  },\n  option: {\n    marginTop: 20\n  },\n  optionText: {\n    fontSize: 18\n  }\n});\nexport default UserAccount;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","useNavigation","jsx","_jsx","jsxs","_jsxs","UserAccount","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","navigation","handleLogin","navigate","handleLogout","style","styles","container","children","profileInfo","profileTitle","loginButton","onPress","loginButtonText","logoutButton","logoutButtonText","option","optionText","create","flex","justifyContent","alignItems","marginTop","fontSize","fontWeight","marginBottom","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","color"],"sources":["C:/Users/Bharath Kumar/Desktop/Astonish/React_Native/E-Commerce/Jtdeal/jtdeal/component/footer/UserAccount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native'; // Import useNavigation hook\r\n\r\nconst UserAccount = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n  const navigation = useNavigation(); // Initialize navigation\r\n\r\n  const handleLogin = () => {\r\n    // Navigate to the login page\r\n    navigation.navigate('Login');\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Handle logout action\r\n    setIsLoggedIn(false); // Set login status to false\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Profile information section */}\r\n      <View style={styles.profileInfo}>\r\n        <Text style={styles.profileTitle}>Profile Information</Text>\r\n        <Text>{isLoggedIn ? 'Welcome User' : 'Guest'}</Text>\r\n      </View>\r\n\r\n      {/* Conditional rendering based on login status */}\r\n      {!isLoggedIn ? (\r\n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n          <Text style={styles.loginButtonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      ) : (\r\n        <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n          <Text style={styles.logoutButtonText}>Logout</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n      {/* Other options */}\r\n      <TouchableOpacity style={styles.option}>\r\n        <Text style={styles.optionText}>Sale on JTDeal</Text>\r\n      </TouchableOpacity>\r\n      {/* Add more options here */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  profileInfo: {\r\n    marginTop: 20,\r\n  },\r\n  profileTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  loginButton: {\r\n    marginTop: 20,\r\n    backgroundColor: 'black',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 50,\r\n    borderRadius: 10,\r\n  },\r\n  loginButtonText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n  logoutButton: {\r\n    marginTop: 20,\r\n    backgroundColor: 'red',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 50,\r\n    borderRadius: 10,\r\n  },\r\n  logoutButtonText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n  option: {\r\n    marginTop: 20,\r\n  },\r\n  optionText: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default UserAccount;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}